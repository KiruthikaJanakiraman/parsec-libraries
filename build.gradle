buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id 'net.researchgate.release' version '2.5.0'
    id 'com.bmuschko.nexus' version '2.3.1'
    id 'io.codearte.nexus-staging' version '0.22.0'
}

release {
    failOnUnversionedFiles = false
    failOnCommitNeeded = false
    tagTemplate = '$name-$version'
    newVersionCommitMessage = '[Gradle Release Plugin][ci skip] new version release:'
}

wrapper {
    gradleVersion = '5.2.1'
}

allprojects {

    group = 'com.yahoo.parsec'

    apply plugin: 'java'
    apply plugin: 'maven-publish'
    apply plugin: 'maven'

    repositories {
        mavenCentral()
    }
}

//maven central settings
ext.'nexusUsername' = System.env.OSS_USER
ext.'nexusPassword' = System.env.OSS_PW
ext.'signing.keyId' = System.env.SIGNING_KEYID
ext.'signing.password' = System.env.SIGNING_PWD


//the encrypted secret key ring file is checked in and will be decrypted by travis
ext.'signing.secretKeyRingFile' = "${project.rootDir}/maintainer-secring.gpg"

subprojects {
    //prepare for upload
    modifyPom {
        project {
            description 'The Parsec Libraries provides for web service build.'
            name project.name
            url 'https://github.com/yahoo/parsec-libraries'
            licenses {
                license {
                    name "The Apache Software License, Version 2.0"
                    url "http://www.apache.org/licenses/LICENSE-2.0.txt"
                    distribution "repo"
                }
            }
            developers {
                developer {
                    id "parsec-maintainers"
                    name "parsec-maintainers"
                    email "parsec-maintainers@verizonmedia.com"
                }
            }
            scm {
                connection 'scm:git:https://github.com/yahoo/parsec-libraries.git'
                developerConnection 'scm:git:https://github.com/yahoo/parsec-libraries.git'
                url 'https://github.com/yahoo/parsec-libraries/'
            }
        }
    }


    extraArchive {
        sources = true
        tests = true
        javadoc = true
    }

    //for upload
    nexus {
        sign = true
        repositoryUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
        snapshotRepositoryUrl = 'https://oss.sonatype.org/content/repositories/snapshots/'
    }

    nexusStaging {
        //use default settings
    }



    uploadArchives.dependsOn check
    afterReleaseBuild.dependsOn check
}
